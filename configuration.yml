# installation of library for ruby rails
---
- hosts: nginx
  tasks:
    - name: ensure nginx is at the latest version
      apt:
        name: "{{ item }}"
      with_items:
        - gcc
        - autoconf
        - bison
        - build-essential
        - libssl-dev
        - libyaml-dev
        - libreadline6-dev
        - zlib1g-dev
        - libncurses5-dev
        - libffi-dev
        - libgdbm-dev
        - sqlite3
        - libsqlite3-dev
		
### instlltion of ruby 

---
- hosts: nginx
  tasks:
    - name: Download ruby-install
      become: no
      get_url:
        url: https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz
        dest: /home/ubuntu/ruby-install-0.6.1.tar.gz
    - name: Extract ruby-install tarball                                                                                                                                                become: no
      unarchive:
        src: /home/ubuntu/ruby-install-0.6.1.tar.gz
        dest: /home/ubuntu
        creates: /home/ubuntu/ruby-install-0.6.1
        remote_src: yes
    - name: Install ruby-install
      make:
        chdir: /home/ubuntu/ruby-install-0.6.1
        target: install

#### installtion of haproxy 
---
- hosts: LB1

  tasks:
    - name: update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: install haproxy
      apt: name=haproxy state=present
	  

### configuration of haproxy as a loadbalancer using jinja template 


---
- hosts: LB1
  tasks: haproxy setup for ruby rail appliation
   - name: setting up loadbalancer

  vars:
    haproxy_app_name: myapp
    haproxy_mode: http
    haproxy_enable_stats: enable
    haproxy_algorithm: roundrobin
    haproxy_backend_servers:
     - {name: server1, ip: 18.223.125.120, port: 80, paramstring: cookie A check}
     - {name: server, ip: 3.15.3.101, port: 80, paramstring: cookie A check}
    haproxy_stats_users:
     - {username: admin, password: admin}

  template: src=opt/haproxy.cfg
            dest=/etc/haproxy/haproxy.cfg
            backup=yes

  handlers:
    - name: restart haproxy
      service: name=haproxy state=restarted
  notify:
    - restart haproxy

	  
	  
	  
	  
	  
